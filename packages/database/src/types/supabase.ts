// This file will be auto-generated by Supabase CLI
// For now, we'll create manual types based on our schema

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      organizations: {
        Row: {
          id: string
          name: string
          slug: string
          settings: Json
          deleted_at: string | null
          deleted_by: string | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          name: string
          slug: string
          settings?: Json
          deleted_at?: string | null
          deleted_by?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          name?: string
          slug?: string
          settings?: Json
          deleted_at?: string | null
          deleted_by?: string | null
          created_at?: string
          updated_at?: string
        }
      }
      users: {
        Row: {
          id: string
          organization_id: string | null
          email: string
          display_name: string | null
          role: 'admin' | 'contributor' | 'reader'
          profile: Json
          consent_given_at: string | null
          consent_version: string | null
          data_retention_until: string | null
          anonymize_after_days: number | null
          deleted_at: string | null
          deleted_by: string | null
          anonymized_at: string | null
          created_at: string
          updated_at: string
          last_login_at: string | null
        }
        Insert: {
          id: string
          organization_id?: string | null
          email: string
          display_name?: string | null
          role?: 'admin' | 'contributor' | 'reader'
          profile?: Json
          consent_given_at?: string | null
          consent_version?: string | null
          data_retention_until?: string | null
          anonymize_after_days?: number | null
          deleted_at?: string | null
          deleted_by?: string | null
          anonymized_at?: string | null
          created_at?: string
          updated_at?: string
          last_login_at?: string | null
        }
        Update: {
          id?: string
          organization_id?: string | null
          email?: string
          display_name?: string | null
          role?: 'admin' | 'contributor' | 'reader'
          profile?: Json
          consent_given_at?: string | null
          consent_version?: string | null
          data_retention_until?: string | null
          anonymize_after_days?: number | null
          deleted_at?: string | null
          deleted_by?: string | null
          anonymized_at?: string | null
          created_at?: string
          updated_at?: string
          last_login_at?: string | null
        }
      }
      content: {
        Row: {
          id: string
          organization_id: string
          author_id: string
          title: string
          slug: string | null
          body: Json
          summary: string | null
          tags: string[]
          status: 'draft' | 'in_review' | 'published' | 'archived'
          version: number
          parent_id: string | null
          metadata: Json
          word_count: number | null
          reading_time_minutes: number | null
          deleted_at: string | null
          deleted_by: string | null
          created_at: string
          updated_at: string
          published_at: string | null
        }
        Insert: {
          id?: string
          organization_id: string
          author_id: string
          title: string
          slug?: string | null
          body: Json
          summary?: string | null
          tags?: string[]
          status?: 'draft' | 'in_review' | 'published' | 'archived'
          version?: number
          parent_id?: string | null
          metadata?: Json
          word_count?: number | null
          reading_time_minutes?: number | null
          deleted_at?: string | null
          deleted_by?: string | null
          created_at?: string
          updated_at?: string
          published_at?: string | null
        }
        Update: {
          id?: string
          organization_id?: string
          author_id?: string
          title?: string
          slug?: string | null
          body?: Json
          summary?: string | null
          tags?: string[]
          status?: 'draft' | 'in_review' | 'published' | 'archived'
          version?: number
          parent_id?: string | null
          metadata?: Json
          word_count?: number | null
          reading_time_minutes?: number | null
          deleted_at?: string | null
          deleted_by?: string | null
          created_at?: string
          updated_at?: string
          published_at?: string | null
        }
      }
      reviews: {
        Row: {
          id: string
          content_id: string
          reviewer_id: string
          decision: 'approve' | 'reject' | 'request_changes' | null
          comments: string | null
          suggestions: Json
          is_anonymous: boolean
          deleted_at: string | null
          deleted_by: string | null
          created_at: string
          updated_at: string
          completed_at: string | null
        }
        Insert: {
          id?: string
          content_id: string
          reviewer_id: string
          decision?: 'approve' | 'reject' | 'request_changes' | null
          comments?: string | null
          suggestions?: Json
          is_anonymous?: boolean
          deleted_at?: string | null
          deleted_by?: string | null
          created_at?: string
          updated_at?: string
          completed_at?: string | null
        }
        Update: {
          id?: string
          content_id?: string
          reviewer_id?: string
          decision?: 'approve' | 'reject' | 'request_changes' | null
          comments?: string | null
          suggestions?: Json
          is_anonymous?: boolean
          deleted_at?: string | null
          deleted_by?: string | null
          created_at?: string
          updated_at?: string
          completed_at?: string | null
        }
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      can_contribute: {
        Args: Record<PropertyKey, never>
        Returns: boolean
      }
      get_user_organization_id: {
        Args: Record<PropertyKey, never>
        Returns: string
      }
      is_admin: {
        Args: Record<PropertyKey, never>
        Returns: boolean
      }
      soft_delete: {
        Args: {
          table_name: string
          record_id: string
        }
        Returns: undefined
      }
      user_has_role: {
        Args: {
          required_role: 'admin' | 'contributor' | 'reader'
        }
        Returns: boolean
      }
    }
    Enums: {
      user_role: 'admin' | 'contributor' | 'reader'
      content_status: 'draft' | 'in_review' | 'published' | 'archived'
      review_decision: 'approve' | 'reject' | 'request_changes'
      activity_type: 'login' | 'logout' | 'content_created' | 'content_updated' | 'content_deleted' | 'review_submitted' | 'data_export'
    }
  }
}